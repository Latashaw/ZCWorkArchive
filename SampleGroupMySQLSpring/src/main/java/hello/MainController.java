package hello;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller    // This means that this class is a Controller
@RequestMapping(path = "/database") // This means URL's start with /demo (after Application path)
public class MainController {

    // This means to get the bean called accountsRepository
    @Autowired// Which is auto-generated by Spring, we will use it to handle the data
    private AccountsRepository accountsRepository;

    @GetMapping(path = "/add") // Map ONLY GET Requests
    public
    @ResponseBody
    String addNewAccounts(@RequestParam long accountNumber, @RequestParam String accountType,
                          @RequestParam double balance, @RequestParam double interestRate,
                          @RequestParam double overdraftPenalty, @RequestParam double requiredMinimumBalance,
                          @RequestParam boolean isMinimumBalanceRequired, @RequestParam boolean isOverdrawn) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        Accounts accounts = new Accounts();
        accounts.setAccountNumber(accountNumber);
        accounts.setAccountType(accountType);
        accounts.setBalance(balance);
        accounts.setInterestRate(interestRate);
        accounts.setOverdraftPenalty(overdraftPenalty);
        accounts.setRequiredMinimumBalance(requiredMinimumBalance);
        accounts.setIsMinimumBalanceRequired(isMinimumBalanceRequired);
        accounts.setIsOverdrawn(isOverdrawn);
        accountsRepository.save(accounts);
        return "Saved";
    }

    @GetMapping(path = "/all")
    public
    @ResponseBody
    Iterable<Accounts> getAllAccounts() {
        // This returns a JSON or XML with the Accounts
        return accountsRepository.findAll();
    }

    @Autowired
    private TransactionsRepository transactionsRepository;

    @GetMapping(path = "/add") // Map ONLY GET Requests
    public
    @ResponseBody
    String addNewTransactions(@RequestParam long transactionNumber, @RequestParam double debits, @RequestParam double credits) {
        Transactions transactions = new Transactions();
        transactions.setTransactionNumber(transactionNumber);
        transactions.setDebits(debits);
        transactions. setCredits(credits);
        transactionsRepository.save(transactions);
        return "saved";
    }

    @GetMapping(path = "/all")
    public
    @ResponseBody
    Iterable<Transactions> getAllTransactions() {
        // This returns a JSON or XML with the Accounts
        return transactionsRepository.findAll();
    }
}
